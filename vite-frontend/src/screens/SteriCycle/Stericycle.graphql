fragment SteriCycle on steri_cycle {
    id
    created_at
    updated_at
    steri_id
    status
    steri {
        id
        name
        serial
    }
    log_data
    cycle_number
    start_user {
        ...User
    }
    start_at
    finish_user {
        ...User
    }
    finish_at
    notes
    steri_labels(order_by: {
        column: "loaded_at",
        direction: desc
    }) {
        ...SteriLabel
    }
    is_spore_test_enabled
    spore_test_result
    spore_test_user {
        id
        name
    }
    spore_test_recorded_at
}


fragment SteriCycleListItem on steri_cycle {
    id
    created_at
    updated_at
    finish_at
    status
    spore_test_recorded_at
    is_spore_test_enabled
    spore_test_result
    cycle_number
    steri_id
}

query listSteriCycles($steri_id: Int, $offset: Int, $limit: Int, $order_by: [order_by!]) { 
    steri_cycle(steri_id: $steri_id, limit: $limit, offset: $offset, order_by: $order_by) {
        ...SteriCycleListItem
    }
}

query getSteriCycleCount($steri_id: Int) {
    steri_cycle_count(steri_id: $steri_id)
}

query listActiveSterilizers {
    steri {
        ...Steri
    }
}

mutation createSteriCycle($object: steri_cycle_insert_input!) {
    insert_steri_cycle_one(object: $object) {
        id
    }
}

mutation updateSteriCycle($id: Int!, $set: steri_cycle_set_input!) {
    update_steri_cycle_by_pk(
        id: $id, set: $set
    ) {
        ...SteriCycle
    }
}

query getSteriCycle($id: Int!) {
    steri_cycle_by_pk(id: $id) {
        ...SteriCycle
    }
}

mutation insertSteriLabelEvent($objects: [steri_label_event_insert_input!]!) {
    insert_steri_label_event(objects: $objects) {
        returning {
            ...SteriLabel
        }
    }
}