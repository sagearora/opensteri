{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"SteriItemOutput": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"total_count": {
						"type": "number",
						"format": "double"
					},
					"is_count_enabled": {
						"type": "boolean"
					},
					"is_active": {
						"type": "boolean"
					}
				},
				"required": [
					"id",
					"name",
					"category",
					"total_count",
					"is_count_enabled",
					"is_active"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_SteriItemAttributes.Exclude_keyofSteriItemAttributes.id__": {
				"properties": {
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"total_count": {
						"type": "number",
						"format": "double"
					},
					"is_count_enabled": {
						"type": "boolean"
					},
					"is_active": {
						"type": "boolean"
					}
				},
				"required": [
					"name",
					"category",
					"total_count",
					"is_count_enabled",
					"is_active"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_SteriItemAttributes.id_": {
				"$ref": "#/components/schemas/Pick_SteriItemAttributes.Exclude_keyofSteriItemAttributes.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"Partial_SteriItemInput_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"category": {
						"type": "string"
					},
					"total_count": {
						"type": "number",
						"format": "double"
					},
					"is_count_enabled": {
						"type": "boolean"
					},
					"is_active": {
						"type": "boolean"
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "opensteri",
		"version": "1.0.0",
		"description": "Open-source sterilization logging tool for dental and medical clinics",
		"license": {
			"name": "GNU_v3"
		},
		"contact": {
			"name": "saj@aroradental.com"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/steri_item": {
			"get": {
				"operationId": "ListSteriItems",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/SteriItemOutput"
											},
											"type": "array"
										}
									},
									"required": [
										"items"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateSteriItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"item": {
											"$ref": "#/components/schemas/SteriItemOutput"
										}
									},
									"required": [
										"item"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_SteriItemAttributes.id_"
							}
						}
					}
				}
			}
		},
		"/steri_item/{id}": {
			"get": {
				"operationId": "GetSteriItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"item": {
											"$ref": "#/components/schemas/SteriItemOutput"
										}
									},
									"required": [
										"item"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateSteriItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"item": {
											"$ref": "#/components/schemas/SteriItemOutput"
										}
									},
									"required": [
										"item"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Partial_SteriItemInput_"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}